<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
       <context:component-scan base-package="algol.csltd.com.ua"/>
       <!--Two beans from one class instantiated with default constructor -->
       <bean id="simpleBean1" class="algol.csltd.com.ua.simpleBeans.SimpleBean" init-method="initMethod" destroy-method="destroyMethod"/>
       <bean id="simpleBean2" class="algol.csltd.com.ua.simpleBeans.SimpleBean" init-method="initMethod" destroy-method="destroyMethod"/>
       <!--<bean id="simpleBean2" class="algol.csltd.com.ua.simpleBeans.SimpleBean">-->
              <!--<property name="adminEmails">-->
                     <!--<props>-->
                            <!--<prop key="administrator">administrator@example.org</prop>-->
                            <!--<prop key="support">support@example.org</prop>-->
                            <!--<prop key="development">development@example.org</prop>-->
                     <!--</props>-->
              <!--</property>-->
              <!--&lt;!&ndash; results in a setSomeList(java.util.List) call &ndash;&gt;-->
              <!--<property name="someList">-->
                     <!--<list>-->
                            <!--<value>a list element followed by a reference</value>-->
                            <!--<ref bean="simpleBean1" />-->
                     <!--</list>-->
              <!--</property>-->
              <!--&lt;!&ndash; results in a setSomeMap(java.util.Map) call &ndash;&gt;-->
              <!--<property name="someMap">-->
                     <!--<map>-->
                            <!--<entry key="an entry" value="just some string"/>-->
                            <!--<entry key ="a ref" value-ref="simpleBean1"/>-->
                     <!--</map>-->
              <!--</property>-->
              <!--&lt;!&ndash; results in a setSomeSet(java.util.Set) call &ndash;&gt;-->
              <!--<property name="someSet">-->
                     <!--<set>-->
                            <!--<value>just some string</value>-->
                            <!--<ref bean="simpleBean1" />-->
                     <!--</set>-->
              <!--</property>-->
       <!--</bean>-->
       <!--&lt;!&ndash; Bean, instantioated with constructor with argument &ndash;&gt;-->
       <!--<bean id="instantiatingWithConstructorBean" class="algol.csltd.com.ua.instantiation.InstantiatingWithConstructorBean">-->
              <!--<constructor-arg type="java.lang.String" value="Hello World"/>-->
       <!--</bean>-->
       <!--&lt;!&ndash;Beans, instantiated with static factory&ndash;&gt;-->
       <!--<bean id="instantiationWithStaticFactoryMethod" class="algol.csltd.com.ua.instantiation.InstantiationWithStaticFactoryMethod" factory-method="createInstance"/>-->
       <!--<bean id="arrayList" class="algol.csltd.com.ua.instantiation.InstantiationWithStaticFactoryMethod" factory-method="createArrayList"/>-->
       <!--&lt;!&ndash; Beans, instantiated using instance factory &ndash;&gt;-->
       <!--<bean id="serviceLocator" class="algol.csltd.com.ua.instantiation.DefaultServiceLocator"/>-->
       <!--<bean id="simpleBeanInstance" factory-bean="serviceLocator" factory-method="createSimpleBeanInstance"/>-->
       <!--<bean id="sampleParentBeanInstance" factory-bean="serviceLocator" factory-method="createSampleParentBean"/>-->
       <!--<bean id="sampleString" factory-bean="serviceLocator" factory-method="createSampleString"/>-->
       <!--&lt;!&ndash; Setter-based dependency inhection &ndash;&gt;-->
       <!--<bean id="exampleBean" class="algol.csltd.com.ua.dependencies.ExampleBean">-->
              <!--&lt;!&ndash; setter injection using the nested ref element &ndash;&gt;-->
              <!--<property name="beanOne">-->
                     <!--<ref bean="anotherExampleBean"/>-->
              <!--</property>-->
              <!--&lt;!&ndash; setter injection using the neater ref attribute &ndash;&gt;-->
              <!--<property name="beanTwo" ref="yetAnotherBean"/>-->
              <!--<property name="integerProperty" value="1"/>-->
       <!--</bean>-->
       <!--<bean id="anotherExampleBean" class="algol.csltd.com.ua.dependencies.AnotherBean"/>-->
       <!--<bean id="yetAnotherBean" class="algol.csltd.com.ua.dependencies.YetAnotherBean"/>-->
       <!--&lt;!&ndash;Combination of setter-based and constructor-based dependencies injection&ndash;&gt;-->
       <!--<bean id="exampleBean2" class="algol.csltd.com.ua.dependencies.ExampleBean">-->
              <!--<constructor-arg ref="anotherExampleBean"/>-->
              <!--<constructor-arg value="123"/>-->
              <!--&lt;!&ndash;Inner bean&ndash;&gt;-->
              <!--<property name="beanTwo">-->
                     <!--<bean class="algol.csltd.com.ua.dependencies.YetAnotherBean"/>-->
              <!--</property>-->
       <!--</bean>-->
       <!--&lt;!&ndash;Another example of constructor based injection for static factory instntiation&ndash;&gt;-->
       <!--<bean id="exampleBean3" class="algol.csltd.com.ua.dependencies.ExampleBean" factory-method="createInstance">-->
              <!--<constructor-arg ref="anotherExampleBean"/>-->
              <!--<constructor-arg ref="yetAnotherBean"/>-->
              <!--<constructor-arg value="123"/>-->
       <!--</bean>-->
       <bean class="algol.csltd.com.ua.simpleBeans.MyBeanPostProcessor"/>
       <bean class="algol.csltd.com.ua.simpleBeans.MyBeanFactoryPostProcessor"/>

</beans>